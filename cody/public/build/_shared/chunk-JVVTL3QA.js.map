{
  "version": 3,
  "sources": ["../../../app/context/socket.tsx"],
  "sourcesContent": ["// REMIX HMR BEGIN\nif (!window.$RefreshReg$ || !window.$RefreshSig$ || !window.$RefreshRuntime$) {\n  console.warn('remix:hmr: React Fast Refresh only works when the Remix compiler is running in development mode.');\n} else {\n  var prevRefreshReg = window.$RefreshReg$;\n  var prevRefreshSig = window.$RefreshSig$;\n  window.$RefreshReg$ = (type, id) => {\n    window.$RefreshRuntime$.register(type, \"\\\"app/context/socket.tsx\\\"\" + id);\n  }\n  window.$RefreshSig$ = window.$RefreshRuntime$.createSignatureFunctionForTransform;\n}\nvar _s = $RefreshSig$();\nimport * as __hmr__ from \"remix:hmr\";\nif (import.meta) {\n  import.meta.hot = __hmr__.createHotContext(\n  //@ts-expect-error\n  \"app/context/socket.tsx\");\n  import.meta.hot.lastModified = \"1712192322426.98\";\n}\n// REMIX HMR END\n\nimport { createContext, useContext } from \"react\";\nconst SocketContext = createContext(undefined);\nexport function useSocket() {\n  _s();\n  return useContext(SocketContext);\n}\n_s(useSocket, \"gDsCjeeItUuvgOWf1v4qoK9RF6k=\");\nexport function SocketProvider({\n  socket,\n  children\n}) {\n  return <SocketContext.Provider value={socket}>{children}</SocketContext.Provider>;\n}\n_c = SocketProvider;\nvar _c;\n$RefreshReg$(_c, \"SocketProvider\");\n\nwindow.$RefreshReg$ = prevRefreshReg;\nwindow.$RefreshSig$ = prevRefreshSig;"],
  "mappings": ";;;;;;;;;;;;;;AAqBA,mBAA0C;AAWjC;AA/BT,IAAI,CAAC,OAAO,gBAAgB,CAAC,OAAO,gBAAgB,CAAC,OAAO,kBAAkB;AAC5E,UAAQ,KAAK,kGAAkG;AACjH,OAAO;AACD,mBAAiB,OAAO;AACxB,mBAAiB,OAAO;AAC5B,SAAO,eAAe,CAAC,MAAM,OAAO;AAClC,WAAO,iBAAiB,SAAS,MAAM,6BAA+B,EAAE;AAAA,EAC1E;AACA,SAAO,eAAe,OAAO,iBAAiB;AAChD;AANM;AACA;AAMN,IAAI,KAAK,aAAa;AAEtB,IAAI,aAAa;AACf,cAAY,MAAc;AAAA;AAAA,IAE1B;AAAA,EAAwB;AACxB,cAAY,IAAI,eAAe;AACjC;AAIA,IAAM,oBAAgB,4BAAc,MAAS;AACtC,SAAS,YAAY;AAC1B,KAAG;AACH,aAAO,yBAAW,aAAa;AACjC;AACA,GAAG,WAAW,8BAA8B;AACrC,SAAS,eAAe;AAAA,EAC7B;AAAA,EACA;AACF,GAAG;AACD,SAAO,mDAAC,cAAc,UAAd,EAAuB,OAAO,QAAS,YAAxC;AAAA;AAAA;AAAA;AAAA,SAAiD;AAC1D;AACA,KAAK;AACL,IAAI;AACJ,aAAa,IAAI,gBAAgB;AAEjC,OAAO,eAAe;AACtB,OAAO,eAAe;",
  "names": []
}
